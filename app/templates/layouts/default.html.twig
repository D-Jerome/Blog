<!DOCTYPE html>
<html lang="fr" class="h-10">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script src="https://cdn.tiny.cloud/1/7dg3ij9tw4r3l4gf520zre11sn2zadxpboliz0661a7bxwt1/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>

    <script>
      tinymce.init({
        selector: 'textarea#content',
        plugins: 'image',
        toolbar: 'undo redo | link image | code',
        images_file_types: 'jpg,svg,webp',
      
        image_title: true,
  /* enable automatic uploads of images represented by blob or data URIs*/
        automatic_uploads: true,
  /*
    URL of our upload handler (for more details check: https://www.tiny.cloud/docs/configure/file-image-upload/#images_upload_url)
    images_upload_url: 'postAcceptor.php',
    here we add custom filepicker only to Image dialog
  */
        file_picker_types: 'image file media',
        /* and here's our custom image picker*/
        file_picker_callback: (cb, value, meta) => {
            const input = document.createElement('input');
            input.setAttribute('type', 'file');
            input.setAttribute('accept', 'image/*');
            input.addEventListener('change', (e) => {
                const file = e.target.files[0];
                const reader = new FileReader();
                reader.addEventListener('load', () => {
    /*
        Note: Now we need to register the blob in TinyMCEs image blob
        registry. In the next release this part hopefully won't be
        necessary, as we are looking to handle it internally.
    */
                    const id = 'blobid' + (new Date()).getTime();
                    const blobCache =  tinymce.activeEditor.editorUpload.blobCache;
                    const base64 = reader.result.split(',')[1];
                    const blobInfo = blobCache.create(id, file, base64);
                    blobCache.add(blobInfo);

            /* call the callback and populate the Title field with the file name */
                    cb(blobInfo.blobUri(), { title: file.name });
                });
                reader.readAsDataURL(file);
            });

            input.click();
        },
        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:16px }'

      
    });
    </script>
    
    <title>{% block title %}Blog Project{% endblock %}</title>
</head>

<body class="d-flex flex-column">
    <nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top ">
        <a href="/blog-project/" class="navbar-brand">Mon Projet 5</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>    
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item">
                    <a href="/blog-project/post" class="nav-link">Tous les Posts</a>
                </li>
                <li class="nav-item">
                    <a href="/blog-project/post/list" class="nav-link">Posts</a>
                </li>
            </ul>
        </div>
        <form class="justify-content-center col-4 form-inline my-2 my-lg-0">
            <input class="form-control mr-sm-2 " type="search" placeholder="Search" aria-label="Search">
            <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
        </form>
            {% block login %}?{% endblock %}
            </ul> 
        </div>
    </nav>
     <div class="container mt-5"></div>
    {% block errors %}?{% endblock %}
        
        <div class="container mt-5"><hr>
            <div class="row">

        {% block content %}{% endblock %}
         </div>
         {% block page %}{% endblock %}
    </div>
    <footer class="bg-light py-4 footer mt-auto">
        <div class="container">
               
        </div>
        
    </footer>
</body>

</html>